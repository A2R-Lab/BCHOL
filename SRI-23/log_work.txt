Jan 16, Yana:

Current status:
new-test and local-new_test both have working versions for 1 block

Goals:
-identify problems for 2 blocks (right now send nan)

Problems:
F_state is not copied but d,q,r are correct
When using 1 block F_state is copied

Reminder:
d = lambda
q =state
r = input

Jan 17, Yana:

Line 511 is causing troubles for 1 block general solution, but works fine for solve_leaf

for (uint32_t ind = block_id; ind < numleaves; ind += grid_dim)
    {
      for(uint32_t ind = 0; ind < cur_depth; ind+=block_dim) 
      {}
    }
instead of for(uint32_t ind = block_id; ind < num_products; ind += grid_dim)

Can we do threads here or should we leave it as block?

Jan 23, Yana:

Loop 672-679 chage to have 2 loops per blocks
Everything works till Shur complements

Jan 26th, Yana:

Figure out dependency flow

Update Shur:
1 block, without line 511, without grind sync solves 
1 block, without line 511, with grynd sync (760) still works

8 blocks, with 511, with grynd sync no problem with iterations

Jan 29th, Yana:

cleaning all debug

Feb 15:

- line 601 : why copy2 is different from copy::glass?
- solve_leaf (is it better to pass constants/can we make them global vars?)
- copy2 works line 636 but not 625

*** SOLVE_LEAF***
  overwrites F_lambda for indx=0, for others F_state, F_input, d,q,r, F_prev (not ind=0)
  copies seem fine
***

**beginnig of the loop copying from RAM**
need to figure out better way with 2^smth /i 
otherwise looks fine for now

After beginning shouldn't need to copy anything

Factor_inner question about C2,F2?

Solve_Cholesky_fact no questions

loops can be better (line 800)

end of matrix loop (should copy to ram every level not just level higher), block.sync() seems to be weird

!!!!!!!!!!for the soln vector loop:
 - factor_innerProduct_sol doesn't need any copying from RAM (just uses A_B)

 - cholSolve_InPlace needs s_F_lambda
 -update_Schur needs s_F_state, s_F_input and s_F_lambda, updates s_F_lambda)